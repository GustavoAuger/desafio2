name: Despliegue en AWS EC2

on:
  push:
    branches:
      - main

jobs:
  desplegar:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout del código del repositorio
      - name: Checkout del código
        uses: actions/checkout@v3

      # 2. Configurar la clave SSH para la conexión con la instancia
      - name: Configurar clave SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa

      # 3. Instalar dependencias en la instancia EC2
      - name: Configurar Python y dependencias
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_IP }} "
            sudo apt update && sudo apt upgrade -y && \
            sudo apt install -y python3 python3-venv python3-pip git
          "

      # 4. Clonar o actualizar el repositorio en la instancia EC2
      - name: Clonar o actualizar el repositorio
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_IP }} "
            if [ ! -d /home/${{ secrets.EC2_USER }}/app ]; then
              git clone https://github.com/GustavoAuger/desafio2 /home/${{ secrets.EC2_USER }}/app;
            else
              cd /home/${{ secrets.EC2_USER }}/app && git pull;
            fi
          "

      # 5. Crear entorno virtual e instalar dependencias
      - name: Crear entorno virtual e instalar dependencias
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_IP }} "
            cd /home/${{ secrets.EC2_USER }}/app && \
            python3 -m venv venv && \
            source venv/bin/activate && \
            python3 -m pip install --upgrade pip && \
            python3 -m pip install --no-cache-dir -r requirements.txt --break-system-packages
          "
      # 6. Crear el archivo .env con las credenciales
      - name: Configurar credenciales de MongoDB
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_IP }} "
            echo 'MONGO_URI=${{ secrets.MONGO_URI }}' > /home/${{ secrets.EC2_USER }}/app/.env
          "
          
      # 7. Reiniciar la aplicación
      - name: Reiniciar la aplicación
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_IP }} "
            pkill -f app.py || true && \
            nohup /home/${{ secrets.EC2_USER }}/app/venv/bin/python3 /home/${{ secrets.EC2_USER }}/app/app.py &
          "

      # 8. Validar el despliegue
      - name: Validar el despliegue
        run: |
          sleep 10
          curl -f http://${{ secrets.EC2_IP }}:5000 || exit 1
