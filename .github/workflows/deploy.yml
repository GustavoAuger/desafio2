name: Despliegue en AWS EC2

on:
  push:
    branches:
      - main

jobs:
  desplegar:
    runs-on: ubuntu-latest

    steps:
      # 1. Configurar la clave SSH para la conexión con la instancia
      - name: Configurar clave SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa

      # 2. Instalar Python y Git en la instancia EC2 solo si no están presentes
      - name: Instalar Python y Git
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_IP }} "
            sudo apt-get update -y
            if ! command -v python3 &> /dev/null; then
              echo 'Python3 no está instalado, instalando...'
              sudo apt-get install -y python3 python3-pip
            else
              echo 'Python3 ya está instalado'
            fi
            if ! command -v git &> /dev/null; then
              echo 'Git no está instalado, instalando...'
              sudo apt-get install -y git
            else
              echo 'Git ya está instalado'
            fi
          "

      # 3. Clonar el repositorio si no existe en la instancia EC2
      - name: Clonar el repositorio si no existe
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_IP }} "
            if [ ! -d /home/${{ secrets.EC2_USER }}/app ]; then
              git clone https://github.com/GustavoAuger/desafio2 /home/${{ secrets.EC2_USER }}/app
            fi
          "

      # 4. Instalar dependencias si el archivo requirements.txt cambió
      - name: Instalar dependencias
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_IP }} "
            cd /home/${{ secrets.EC2_USER }}/app &&
            git pull &&
            pip3 install --no-cache-dir -r requirements.txt
          "

      # 5. Actualizar la aplicación y reiniciarla
      - name: Actualizar la aplicación
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_IP }} "
            cd /home/${{ secrets.EC2_USER }}/app &&
            git pull &&
            nohup python3 app.py &
          "

      # 6. Validar que la aplicación está activa
      - name: Validar el despliegue
        run: |
          sleep 10
          curl -f http://${{ secrets.EC2_IP }}:5000 || exit 1
